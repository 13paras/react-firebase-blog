rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
 match /blogs/{blog} {
      allow read: if true;
    allow write: if request.auth != null;
    allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
      match /comments/{commentId} {
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && (request.auth.uid == resource.data.uid || request.auth.uid == get(/databases/$(database)/documents/blogs/$(blogId)).data.uid);
      }
    }
  match /{document=**} {
    allow read, write: if false;
  }
    // VideoBlogs
	match /videoBlogs/{videoBlog} {
  	allow read, write: if request.auth != null;
  	allow delete: if request.auth != null && resource.data.id == request.auth.uid;
  	allow update: if request.auth != null && resource.data.id == request.auth.uid;
  
  	// Allow writing videoUrl and other details only if the document doesn't exist yet
  	allow write: if request.auth != null && resource == null && request.resource.data.keys().hasAll(['videoUrl', 'author', 'title', 'category', 'location', 'description']);
  
  match /{document=**} {
    allow read, write: if false;
  }
}
   
    // Users
      match /users/{user} {
      allow read;
      allow create;
      allow update: if request.auth != null && request.auth.uid == user;
      allow delete: if request.auth != null && request.auth.uid == user;
    }
}

 
  }


//Chat app rules 

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Notes
    match /notes/{noteId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.author.id == request.auth.uid;
      allow delete, update: if request.auth != null && resource.data.author.id == request.auth.uid;
    }
   
    // Users
    match /users/{user} {
      allow read;
      allow create;
      allow update: if request.auth != null && request.auth.uid == user;
      allow delete: if request.auth != null && request.auth.uid == user;
    }
    
     // Messages
    match /messages/{messageId} {
      allow read, write: if request.auth != null;
    }
  }
}